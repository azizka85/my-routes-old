@use '@material/feature-targeting/feature-targeting';
@use '@material/theme/theme';
@use '@material/theme/theme-color';

@use '@material/animation/variables' as animation-variables;
@use '../app-bar/variables' as app-bar-variables;
@use '../variables' as global-variables;
@use './variables';

.drawer {
  z-index: (app-bar-variables.$z-index + 2);  

  @include theme.property(background-color, variables.$surface-fill-color);
  
  position: fixed;
  top: 0;
  left: 0; 
  width: 0;
  border-color: rgba(theme-color.prop-value(variables.$divider-color), variables.$divider-opacity);
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  box-sizing: border-box;
  height: 100vh;
  overflow: hidden;  
  
  transition: width 250ms animation-variables.$standard-curve-timing-function;

  &--open {
    border-right-width: 1px;
    border-right-style: solid;  
    width: 100%;
  }

  &__content {
    height: 100vh;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }  

  &__header {
    height: app-bar-variables.$row-height;
    display: flex;
    align-items: center;
    justify-content: flex-end;
  }
}

// laptop
@media screen and (min-width: (global-variables.$breakpoint-sm + 1px)) {
  .drawer {
    z-index: variables.$z-index;
    width: variables.$min-width;
    border-right-width: 1px;
    border-right-style: solid;  

    &--open, &--hover {
      width: variables.$width;
    }

    &--open ~ .main-content {
      margin-left: variables.$width;
    }
  }

  .main-content {
    margin-left: variables.$min-width;
  
    transition: margin-left 250ms animation-variables.$standard-curve-timing-function;
  }
}
